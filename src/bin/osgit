#!/bin/sh
# Copyright 2019 Cristian Ariza
# Licensed under the EUPL
#
# Main executable

set -u

export VERSION="0.6.0"
PREFIX="$(cd "$(dirname "$0")"/.. || exit; pwd)"
OSGITPATH="$PREFIX"/var/cache/osgit
ORIGIN="$(pwd)"

# shellcheck source=../lib/osgit/commands.sh
. "$PREFIX"/lib/osgit/commands.sh
# shellcheck source=../lib/osgit/log.sh
. "$PREFIX"/lib/osgit/log.sh
# shellcheck source=../lib/osgit/git.sh
. "$PREFIX"/lib/osgit/git.sh

__make_current_master() {
  # keep the content of this branch, but record a merge
  git_path merge --strategy=ours master
  git_path checkout master
  # fast-forward master up to the merge
  git_path merge "$1"
}

main() {
  args=
  subcommand=

  while test "$#" != 0; do
    if test "$1" = "-d"; then
      set -x
    elif test -z "$subcommand"; then
      subcommand="$1"
    else
      args="$*"
      break
    fi

    shift
  done

  case "$subcommand" in
    a* | c* | pi* | rev* | rm* | ro* | unp* | upd* | upg*)

      if test "$(id -u)" != 0; then
        log_fatal "this command must be executed as root"
      fi

      current_branch="$(git_path rev-parse --abbrev-ref HEAD)"
      if test "$current_branch" != "master"; then
        __make_current_master "$current_branch"
      fi

      case "$subcommand" in
        c* | pi* | rev* | ro* | s* | unp*)
          if test "$#" -ne 1; then
            log_fatal "incorrect number of arguments"
          fi
          ;;
      esac
      ;;
  esac

  # shellcheck disable=SC2086
  case "$subcommand" in
    'a'*) commands_add $args ;;
    'du') dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n ;;
    'im'*) commands_import "$ORIGIN/$args" ;;
    'ini'*) commands_init ;;
    'li'*) cat "$OSGITPATH"/packages ;;
    'lo'*) git_path log --oneline ;;
    'pi'*) commands_pin $args ;;
    'rev'*) commands_revert $args ;;
    'rm') commands_rm $args ;;
    'ro'*) commands_rollback $args ;;
    's'*) commands_show $args ;;
    'unp'*) commands_unpin $args ;;
    'upd'*) commands_update $args ;;
    'upg'*) commands_upgrade $args ;;
    'v'*) apt-cache madison $args | sed 's/ | /=/';;
    '-v') echo "osgit $VERSION" ;;
    *) log_fatal "$(commands_help "$VERSION")" ;;
  esac

}

main "$@"
