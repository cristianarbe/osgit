#!/bin/sh
# Copyright 2019 Cristian Ariza
# Licensed under the EUPL
#
# Main executable

set -u

<<<<<<< HEAD
export VERSION="0.5.0"
OSGITPATH="$PREFIX"/var/cache/osgit
PREFIX="$(cd "$(dirname "$0")" || exit; pwd)"/..

# shellcheck source=../lib/osgit/apt.sh
. "$PREFIX"/lib/osgit/apt.sh
# shellcheck source=../lib/osgit/commands.sh
. "$PREFIX"/lib/osgit/commands.sh
# shellcheck source=../lib/osgit/log.sh
. "$PREFIX"/lib/osgit/log.sh

__cleanup() {
  test -z "$TMP" && log_fatal "TMP is not set"

  if test -d "$TMP"; then
    rm -f "$TMP"/* ||
      log_fatal "no write access to tmp folder, bad previous cleanup?"
  fi
}

__startup() {
  cd "$OSGITPATH" ||
    log_fatal "Could not get into $OSGITPATH"
=======
LIB="$ROOT"/lib/osgit && export LIB
ROOT="$(cd "$(dirname "$0")" || exit; pwd)"/.. && export ROOT_DIR
export OSGIT_PROFILE="/var/cache/osgit"
export TMP="/tmp/osgit"
export VERSION="0.4.0"


# shellcheck disable=SC1090
. "$LIB"/apt.sh
# shellcheck disable=SC1090
. "$LIB"/commands.sh
# shellcheck disable=SC1090
. "$LIB"/log.sh

__startup() {
  cd "$OSGIT_PROFILE" ||
    log_fatal "Could not get into $OSGIT_PROFILE"
>>>>>>> 0dd2f41bb05e0c530164e5f20857bfd3068bf5be

  apt_get_installed >"$TMP"/packages.current
}

main() {
<<<<<<< HEAD
  args=

  if test "$#" -eq 0 || test "$#" -lt 2 && test "$1" == "-d"; then
    log_fatal "missing command"
  elif test "$1" == "-d"; then
    set -x && shift
  fi

  subcommand="$1" && shift

  test "$#" -gt 1 && args="$*"
=======
  test "$#" -eq 0 && log_fatal "Missing command"

  command=; args=

  test "$1" == "-d" && set -x && shift

  subcommand="$1" && shift

  test "$#" -ne 0 && args="$*"
>>>>>>> 0dd2f41bb05e0c530164e5f20857bfd3068bf5be

  __startup

  # shellcheck disable=SC2086
  case "$subcommand" in
    a*) commands_add $args ;;
<<<<<<< HEAD
    c*) commands_clone $args ;;
=======
    d*) commands_deploy $args ;;
    he*) commands_help ;;
>>>>>>> 0dd2f41bb05e0c530164e5f20857bfd3068bf5be
    hi*) commands_log $args ;;
    ini*) commands_init ;;
    ins*) commands_add $args ;;
    li*) commands_list $args ;;
    lo*) commands_log $args ;;
    pi*) commands_pin $args ;;
    pu*) commands_rm $args ;;
    rem*) commands_rm $args ;;
    rev*) commands_revert $args ;;
    rm) commands_rm $args ;;
    ro*) commands_rollback $args ;;
    s*) commands_show $args ;;
    uni*) commands_rm $args ;;
    unp*) commands_unpin $args ;;
    upd*) commands_update $args ;;
    upg*) commands_upgrade $args ;;
    v*) echo "osgit $VERSION" ;;
<<<<<<< HEAD
    *) log_fatal "$(commands_help "$VERSION")" ;;
  esac

  __cleanup
=======
    *) log_fatal "Invalid operation '$command'" ;;
  esac

  exit_clean
>>>>>>> 0dd2f41bb05e0c530164e5f20857bfd3068bf5be
}

main "$@"
