#!/bin/sh
# Copyright 2019 Cristian Ariza
# Licensed under the EUPL
#
# Main executable

set -u

export VERSION="0.5.0"
PREFIX="$(cd "$(dirname "$0")"/.. || exit; pwd)"
OSGITPATH="$PREFIX"/var/cache/osgit
ORIGIN="$(pwd)"

# shellcheck source=../lib/osgit/apt.sh
. "$PREFIX"/lib/osgit/apt.sh
# shellcheck source=../lib/osgit/commands.sh
. "$PREFIX"/lib/osgit/commands.sh
# shellcheck source=../lib/osgit/log.sh
. "$PREFIX"/lib/osgit/log.sh


__check_root(){
  if test "$(id -u)" != 0; then
    log_fatal "this command must be executed as root"
  fi
}

main() {
  args=

  if test "$#" -eq 0; then
    log_fatal "$(commands_help "$VERSION")"
  elif test "$#" -lt 2 && test "$1" = '-d' ; then
    log_fatal "$(commands_help "$VERSION")"
  elif test "$1" = "-d"; then
    set -x
    shift
  fi

  subcommand="$1"
  shift

  if test "$#" -gt 0; then
    args="$*"
  fi

  case "$subcommand" in
    h* | v* | i*) ;;
    *)
      if ! cd "$OSGITPATH" 2> /dev/null; then
        log_fatal "Could not cd into $OSGITPATH"
      fi
      ;;
  esac

  case "$subcommand" in
    pi* | unp* | a* | c* | rev* | rm* | ro* | upd* | upgr* )
      __check_root
      git_make_this_master > /dev/null 2>&1
      ;;
  esac

  case "$subcommand" in
    pi* | un* | a* | c* | rev* | rm* | ro*)
      if test "$#" -ne 1; then
        log_fatal "incorrect number of arguments"
      fi
      ;;
  esac


  # shellcheck disable=SC2086
  case "$subcommand" in
    a*) commands_add $args ;;
    c*) commands_clone "$ORIGIN"/$args ;;
    h*) log_fatal "$(commands_help "$VERSION")" ;;
    i*) commands_init ;;
    li*) commands_list $args ;;
    lo*) git log --oneline ;;
    pi*) commands_pin $args ;;
    rev*) commands_revert $args ;;
    rm) commands_rm $args ;;
    ro*) commands_rollback $args ;;
    s*) commands_show $args ;;
    unp*) commands_unpin $args ;;
    upd*) commands_update $args ;;
    upg*) commands_upgrade $args ;;
    v*) echo "osgit $VERSION" ;;
    *) log_fatal "$(commands_help "$VERSION")" ;;
  esac

}

main "$@"
