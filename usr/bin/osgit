#!/bin/sh

# Treat undefined variables as errors
set -u

export OSGIT_PROFILE="/var/cache/osgit"
export TMP="/tmp/osgit"
export VERSION="0.4.0"

APP_ROOT_DIR="$(
  cd "$(dirname "$0")" || exit
  pwd
)"/..
export APP_ROOT_DIR

for lib in apt cleanup commands diffs errors git print root menu; do
  # shellcheck disable=SC1090
  . "$APP_ROOT_DIR"/lib/osgit/"$lib".sh
done

startup() {
  test ! -d "$OSGIT_PROFILE" && mkdir "$OSGIT_PROFILE"

  if test -z "$TMP"; then
    fatal "TMP is not set"
  fi

  if test ! -d "$TMP"; then
    mkdir "$TMP"
    chmod 777 "$TMP"
  fi

  cd "$OSGIT_PROFILE" ||
    fatal "Could not get into $OSGIT_PROFILE"

  if test ! -d .git; then
    git init
    get_installed >"$OSGIT_PROFILE"/packages
    add_commit "First commit"
  fi

  get_installed >"$TMP"/packages.current
}

main() {
  test "$#" -eq 0 && error "Missing command"

  command=
  args=

  while test "$#" -gt 0; do
    case "$1" in
    -d*) set -x ;;
    *)
      break
      ;;
    esac
    shift
  done

  command="$1"
  shift
  test "$#" -ne 0 && args="$*"

  startup

  get_installed >"$TMP"/packages.current

  # shellcheck disable=SC2048
  # shellcheck disable=SC2086
  case "$command" in
  a* | i*) fn_add $args ;;
  d*) fn_deploy $args ;;
  hi*) fn_log $args ;;
  he*) fn_help ;;
  li*) fn_list $args ;;
  lo*) fn_log $args ;;
  pi*) fn_pin $args ;;
  pu*) fn_rm $args ;;
  rem*) fn_rm $args ;;
  rev*) fn_revert $args ;;
  rm) fn_rm $args ;;
  ro*) fn_rollback $args ;;
  s*) fn_show $args ;;
  uni*) fn_rm $args ;;
  unp*) fn_unpin $args ;;
  upd*) fn_update $args ;;
  upg*) fn_upgrade $args ;;
  v*) echo "osgit $VERSION" ;;
  *) error "Invalid operation '$command'" ;;
  esac

  clean_exit
}

main "$@"
